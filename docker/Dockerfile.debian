ARG debian_version=11
FROM debian:$debian_version
# needed to do again after FROM due to docker limitation
ARG debian_version
ARG openssl_version=3.0.9
ARG java_version="8.0.302-zulu"

ENV SOURCE_DIR=/root/source \
    CMAKE_VERSION=3.8.2 \
    NINJA_VERSION=1.7.2 \
    GO_VERSION=1.9.3 \
    GCC_VERSION=4.9.4 \
    OPENSSL_VERSION=$openssl_version \
    JAVA_VERSION=$java_version

# install dependencies
RUN apt -y update && \
    apt -y install \
        autoconf \
        automake \
        bzip2 \
        cmake \
        curl \
        gcc \
        gcc-multilib \
        git \
        gnupg \
        g++ \
        libapr1-dev \
        libssl-dev \
        libtool \
        libc-bin \
        libc6-dev \
        make \
        patch \
        tar \
        unzip \
        wget \
        xutils-dev \
        zip && \
    apt clean && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir $SOURCE_DIR

WORKDIR $SOURCE_DIR

# Install Ninja
RUN curl -L -O https://github.com/ninja-build/ninja/releases/download/v$NINJA_VERSION/ninja-linux.zip && \
    unzip ninja-linux.zip && \
    mkdir -p /opt/ninja-$NINJA_VERSION/bin && \
    mv ninja /opt/ninja-$NINJA_VERSION/bin && \
    echo 'PATH=/opt/ninja-$NINJA_VERSION/bin:$PATH' >> ~/.bashrc

# Install OpenSSL
RUN curl -L -O https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz && \
    tar --extract --file ./openssl-$OPENSSL_VERSION.tar.gz && \
    cd $SOURCE_DIR/openssl-$OPENSSL_VERSION && \
    ./Configure --prefix=/usr/local/opt/openssl --openssldir=/usr/local/opt/openssl no-tests no-legacy shared && \
    make install_sw install_ssldirs install_dev

RUN ln -s -T /usr/local/opt/openssl/lib64 /usr/local/opt/openssl/lib | true && \
    ldconfig /usr/local/opt/openssl/lib64 && \
    ldconfig  && \
    rm -rf $SOURCE_DIR

# Downloading and installing SDKMAN!
RUN curl -s "https://get.sdkman.io" | bash
# Installing Java removing some unnecessary SDKMAN files
RUN bash -c "source $HOME/.sdkman/bin/sdkman-init.sh && \
    yes | sdk install java $JAVA_VERSION && \
    yes | sdk install maven $MAVEN_VERSION && \
    rm -rf $HOME/.sdkman/archives/* && \
    rm -rf $HOME/.sdkman/tmp/*" && \
    echo 'export JAVA_HOME="/root/.sdkman/candidates/java/current"' >> ~/.bashrc && \
    echo 'PATH=$JAVA_HOME/bin:$PATH' >> ~/.bashrc

# Prepare our own build
ENV PATH=/root/.sdkman/candidates/maven/current:/usr/local/opt/openssl/bin:$PATH \
    OPENSSL_INCLUDE_DIR=/usr/local/opt/openssl/include \
    OPENSSL_LIB_DIR=/usr/local/opt/openssl/lib64 \
    JAVA_HOME=/jdk/
